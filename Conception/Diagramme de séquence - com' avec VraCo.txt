http://www.plantuml.com/plantuml/uml/bLLDZzCm4BtxLynn5z4372j02-fbfKKSgBX6qsJIMYHsi2Sj-vFu7VmnnaxpuPLRkfMYHlQRDszcdfq7p-YuRnjbB1CqLFCQthrlFNm4xZoGELgzSd__bDInjaOfzRbaVKG1RtLBxeV3qghv5LQVuDlEapkIMuCZh0fFnbjtTxzCKI4ZuAzUUnreeNQsXG7evmmZaHfV0lltY5g3Dfg5T08FwrbeI-XxHu8ULc2Lg3nYqrCsq1zwhkp9p3Li2Aya_8BCv9wVw4ZDXfXAJjDFOdD0bLlCIbs8o18bchOEZMymAf4ogYBqFfr6hPrdOFSCR2C6-41nHYdJD6LX2hufEAmKMFuKlaiUc335upPD6nBPEkQA8F5SZRfvhNfFfGsIS_9diquyhoX9pL41lD6-avcJ-ue6zw6slfCiL4WaKofgs8aYTkYJaIsaJF9UKgkN2_dyjGuT6PU3FQ-5XLPnKUkcqMQ_TEE4k2L-DpZk_ydA0ydGM_9UDdFm3wlL4iykMFiwvru4d1aBjk5OLZSmbmTqR-0Sjnp5N7WsyMpYQBsnbFF_My2gSlAU35wivmYq1nmJGYtsYOwSsvoHC4x-iZrjbxZp8Z3sA5uvXJOoAxaqYbQRfK4LpByWRPHwGX_bqczikuPW3KkazD7iQRpFO2I7kvFcG-GnT1hkg7iLpc78TzDvymrHbvwWi14FTDY2gdTYMiZL1VBqJ7xPrUdByI0ovFFs3m00

@startuml
note left: 12ms = tps envoi-réception


Activate TimerVraco
TimerVraco -> Observer: read_sensor()
note left: data aquisition from sensors
Activate Observer
Observer -> Sensor: init()
Activate Sensor
Observer -> Sensor: measure()
Sensor --> Observer: value
Observer -> Sensor: shutdown_sensor()
Deactivate Sensor
Observer -> BatteryLevelDetector: measure()
Activate BatteryLevelDetector
BatteryLevelDetector --> Observer: value
Deactivate BatteryLevelDetector

Observer -> Translator: send_data()
note left: first try to send the data
Observer -> TimerVraco: start_timer_ack()
TimerVraco -> Observer: timer_ack_IT()
note left: end of the timer = fail
Observer -> Translator: send_data()
note left: second try to send the data
Activate Translator
Observer -> TimerVraco: start_timer_ack()

Translator -> DispenserManager: update_state()
note left: update database
Deactivate Translator
Activate DispenserManager
DispenserManager -> DispenserManager: find_dispenser()
DispenserManager -> Dispenser: set_filling()
Activate Dispenser
DispenserManager -> Dispenser: set_battery()
DispenserManager -> Dispenser: check_message()
DispenserManager <-- Dispenser: true
DispenserManager -> Dispenser: get_message_to_send()
DispenserManager <-- Dispenser: char* message
Deactivate Dispenser

DispenserManager -> Observer: send_message(message, address)
note left: there is a message for the dispenser
Deactivate DispenserManager
Observer -> TimerVraco: stop_timer_ack()
Observer -> TimerVraco: set_measure_interval_min()
note left
           the message was for example : 
           change measure interval (with the new value)
end note
Observer -> TimerVraco: start_timer_sleep()
note left: time to sleep during measure_interval_min minutes
Deactivate Observer
@enduml